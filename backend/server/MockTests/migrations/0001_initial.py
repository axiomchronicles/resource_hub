# Generated by Django 5.2.5 on 2025-08-23 03:42

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MockTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('subject', models.CharField(db_index=True, max_length=120)),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('difficulty', models.CharField(choices=[('easy', 'easy'), ('medium', 'medium'), ('hard', 'hard')], db_index=True, max_length=10)),
                ('topics', models.JSONField(blank=True, default=list, help_text='List[str] of topics')),
                ('description', models.TextField(blank=True)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('is_published', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_mocktests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField(default=0, help_text='Ordering within the test')),
                ('question', models.TextField()),
                ('options', models.JSONField(default=list, help_text='List[str] of options (2..12)')),
                ('correct_answer', models.PositiveIntegerField(help_text='Index into options (0-based)')),
                ('explanation', models.TextField(blank=True)),
                ('difficulty', models.CharField(choices=[('easy', 'easy'), ('medium', 'medium'), ('hard', 'hard')], default='medium', max_length=10)),
                ('subject', models.CharField(blank=True, max_length=120)),
                ('topic', models.CharField(blank=True, max_length=120)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mock_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='MockTests.mocktest')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(auto_now=True)),
                ('time_taken_seconds', models.PositiveIntegerField(default=0)),
                ('score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('correct_count', models.PositiveIntegerField(default=0)),
                ('total_questions', models.PositiveIntegerField(default=0)),
                ('mock_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts_set', to='MockTests.mocktest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('selected_index', models.PositiveIntegerField()),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='MockTests.question')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='MockTests.testattempt')),
            ],
        ),
        migrations.AddIndex(
            model_name='mocktest',
            index=models.Index(fields=['subject', 'difficulty'], name='MockTests_m_subject_6e545c_idx'),
        ),
        migrations.AddConstraint(
            model_name='question',
            constraint=models.UniqueConstraint(fields=('mock_test', 'order'), name='uq_question_test_order'),
        ),
        migrations.AddIndex(
            model_name='testattempt',
            index=models.Index(fields=['user', 'started_at'], name='MockTests_t_user_id_4cf4ff_idx'),
        ),
        migrations.AddIndex(
            model_name='testattempt',
            index=models.Index(fields=['mock_test', 'started_at'], name='MockTests_t_mock_te_775258_idx'),
        ),
        migrations.AddIndex(
            model_name='answer',
            index=models.Index(fields=['attempt', 'question'], name='MockTests_a_attempt_36ee54_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='answer',
            unique_together={('attempt', 'question')},
        ),
    ]
