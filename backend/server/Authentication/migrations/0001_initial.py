# Generated by Django 5.2.5 on 2025-08-18 16:45

import Authentication.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, db_index=True, max_length=150)),
                ('last_name', models.CharField(blank=True, db_index=True, max_length=150)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\+?\\d{7,20}$', message='Enter a valid phone number.')])),
                ('university', models.CharField(blank=True, max_length=255)),
                ('course', models.CharField(blank=True, max_length=255)),
                ('year', models.PositiveSmallIntegerField(blank=True, choices=[(1, '1st Year'), (2, '2nd Year'), (3, '3rd Year'), (4, '4th Year'), (99, 'Other')], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('dob', models.DateField(blank=True, null=True)),
                ('consent', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(db_index=True, default=False)),
                ('is_superuser', models.BooleanField(db_index=True, default=False)),
                ('is_email_verified', models.BooleanField(db_index=True, default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', Authentication.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('file', models.ImageField(max_length=500, upload_to=Authentication.models.profile_upload_to)),
                ('original_filename', models.CharField(max_length=255)),
                ('mime_type', models.CharField(blank=True, max_length=128)),
                ('size', models.PositiveIntegerField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_pic', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profile picture',
                'verbose_name_plural': 'profile pictures',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('bio', models.TextField(blank=True)),
                ('updated_via', models.CharField(blank=True, help_text='source that last updated profile', max_length=32)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
            },
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('code', models.CharField(db_index=True, max_length=6)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('attempts', models.PositiveSmallIntegerField(default=0, help_text='Number of verification attempts')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='Authenticat_email_851ec4_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_email_verified'], name='Authenticat_is_emai_d5acff_idx'),
        ),
        migrations.AddIndex(
            model_name='otp',
            index=models.Index(fields=['code', 'expires_at'], name='Authenticat_code_dcfc3f_idx'),
        ),
        migrations.AddIndex(
            model_name='otp',
            index=models.Index(fields=['user', 'created_at'], name='Authenticat_user_id_a65710_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='otp',
            unique_together={('user', 'code')},
        ),
    ]
